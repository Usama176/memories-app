{"version":3,"sources":["reducer/userReducer.js","core/Home.js","auth/Signin.js","core/Navbar.js","core/Profile.js","auth/Signup.js","core/CreatePost.js","core/UsersProfile.js","core/FollowingsPosts.js","core/Users.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","type","payload","followers","following","pic","Home","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","useContext","UserContext","dispatch","data","setData","comment","setComment","showComments","setShowComments","postId","setPostId","useEffect","a","fetch","headers","localStorage","getItem","then","res","json","console","log","posts","catch","error","likePost","id","like","method","body","JSON","stringify","result","newData","map","item","_id","likes","className","key","Card","to","postedBy","src","alt","name","Typography","variant","color","component","moment","createdAt","calendar","aria-controls","aria-haspopup","onClick","Menu","keepMounted","open","Boolean","onClose","MenuItem","Authorization","filter","deletePost","photo","title","CardMedia","CardContent","length","haha","angry","includes","comments","M","toast","html","classes","record","style","fontWeight","text","TextareaAutosize","aria-label","placeholder","value","onChange","e","target","Signin","history","useHistory","email","setEmail","password","setPassword","test","setItem","token","user","push","Navbar","searchModal","useRef","search","setSearch","userDetails","setUserDetails","Modal","init","current","data-target","clear","exact","activeClassName","class","ref","query","results","getInstance","close","Profile","makeStyles","theme","root","width","marginTop","spacing","userPosts","setUserPosts","profileImage","setProfileImage","cloudImgUrl","setCloudImgUrl","imgUploadPercentage","setImgUploadPercentage","mypost","LinearProgress","accept","reader","FileReader","onload","readyState","readAsDataURL","files","imageHandler","htmlFor","PhotoCamera","formData","FormData","append","options","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","axios","post","url","UpdateProfile","Signup","setName","undefined","IconButton","disabled","PostData","CreatePost","setTitle","setBody","image","setImage","setTimeout","PostDetails","UsersProfile","user_id","useParams","userProfile","setUserProfile","showfollow","setShowFollow","followUser","followId","prevState","unfollowUser","unfollowId","newFollower","FollowingsPosts","makeComment","Users","users","setUsers","filteredUsers","setFilteredUsers","newUserList","toLowerCase","searchUsers","createContext","Routing","parse","path","App","location","useLocation","useReducer","Provider","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGaA,EAAU,SAACC,EAAOC,GAC1B,MAAkB,QAAfA,EAAOC,KACCD,EAAOE,QAEA,SAAfF,EAAOC,KACC,KAEK,UAAbD,EAAOC,KACA,2BACAF,GADP,IAEII,UAAUH,EAAOE,QAAQC,UACzBC,UAAUJ,EAAOE,QAAQE,YAGhB,iBAAdJ,EAAOC,KACC,2BACAF,GADP,IAEIM,IAAIL,EAAOE,UAGXH,G,iKCwSGO,EA9SF,WAAM,MAIiBC,mBAAS,MAJ1B,mBAIRC,EAJQ,KAIEC,EAJF,KAKTC,EAAc,SAACC,GACnBF,EAAYE,EAAMC,gBAEdC,EAAc,WAClBJ,EAAY,OATC,EAaWK,qBAAWC,GAA9BhB,EAbQ,EAaRA,MAbQ,KAaDiB,SACUT,mBAAS,KAdlB,mBAcRU,EAdQ,KAcFC,EAdE,OAeeX,mBAAS,IAfxB,mBAeRY,EAfQ,KAeCC,EAfD,OAgBwBb,mBAAS,IAhBjC,mBAgBRc,EAhBQ,KAgBMC,EAhBN,OAiBaf,mBAAS,IAjBtB,mBAiBRgB,EAjBQ,KAiBAC,EAjBA,KAoBfC,oBAAS,sBACL,sBAAAC,EAAA,sEACUC,MAAM,WAAY,CACpBC,QAAQ,CACJ,cAAgB,UAAYC,aAAaC,QAAQ,UAGxDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACHiB,QAAQC,IAAIlB,GACZC,EAAQD,EAAKmB,UAGhBC,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAbpB,2CAeF,IAEF,IAAMC,EAAQ,uCAAG,WAAOC,EAAIC,GAAX,SAAAf,EAAA,sEACPC,MAAM,IAAD,OAAKc,GAAQ,CACpBC,OAAO,MACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBtB,OAAQiB,MAGfT,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACe,GAGH,IAAMC,EAAU9B,EAAK+B,KAAI,SAACC,GAGtB,OAAGA,EAAKC,MAAQJ,EAAOI,IAEZ,2BAAID,GAAX,IAAiBE,MAAML,EAAOK,QAIvBF,KAIf/B,EAAQ6B,MAEXV,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MA/BH,2CAAH,wDAoFd,OACI,qBAAKc,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SAEQnC,EAAK+B,KAAI,SAACC,EAAMI,GACZ,OAEI,eAACC,EAAA,EAAD,CAAgBF,UAAU,YAA1B,UACI,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAMG,GAEEN,EAAKO,SAASN,MAAQnD,EAAMmD,IAE5B,YAAYD,EAAKO,SAASN,IAE1B,WANR,SASI,sBAAKE,UAAU,YAAf,UACI,qBAAKK,IAAKR,EAAKO,SAASnD,IAAK+C,UAAU,oBAAoBM,IAAI,YAC/D,+BACST,EAAKO,SAASG,KACnB,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACI,+BACKC,IAAOf,EAAKgB,WAAWC,uBAOxCjB,EAAKO,SAASN,KAAOnD,EAAMmD,KAE3B,gCACI,mBAAGiB,gBAAc,cAAcC,gBAAc,OAAOC,QAAS3D,EAC5D0C,UAAU,4CAEX,cAACkB,EAAA,EAAD,CACC9B,GAAG,cACHhC,SAAUA,EACV+D,aAAW,EACXC,KAAMC,QAAQjE,GACdkE,QAAS7D,EALV,SAOI,cAAC8D,EAAA,EAAD,CAAUN,QAASxD,EAAnB,SACI,mBAAGuC,UAAU,cACZiB,QAAS,YAjEvC,SAAC9C,GAChBI,MAAM,eAAD,OAAgBJ,GAAU,CAC3BmB,OAAQ,SACRd,QAAS,CACLgD,cAAc,UAAU/C,aAAaC,QAAQ,UAGpDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACe,GACH,IAAMC,EAAU9B,EAAK4D,QAAO,SAAC5B,GACzB,OAAOA,EAAKC,MAAQJ,EAAOI,OAE/BhC,EAAQ6B,MAEXV,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAoDwCwC,CAAW7B,EAAKC,kBAU5CD,EAAK8B,MAEL,qCACI,sBAAK3B,UAAU,iBAAf,UACI,6BAAKH,EAAK+B,QACV,cAACpB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,6BAAKd,EAAKN,YAGlB,cAACsC,EAAA,EAAD,UACI,qBAAKxB,IAAKR,EAAK8B,aAIvB,cAACE,EAAA,EAAD,CAAW7B,UAAU,wBAArB,SACA,gCACI,6BAAKH,EAAK+B,QACV,cAACpB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,6BAAKd,EAAKN,cAKtB,eAACuC,EAAA,EAAD,WACI,cAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,+BAAKd,EAAKE,MAAMgC,OAASlC,EAAKmC,KAAKD,OAASlC,EAAKoC,MAAMF,OAAvD,eAEJ,sBAAK/B,UAAU,aAAf,UACI,8BACI,wBAAQiB,QAAS,WAERpB,EAAKE,MAAMmC,SAASvF,EAAMmD,KAI3BX,EAASU,EAAKC,IAAK,UAFnBX,EAASU,EAAKC,IAAK,UAJ3B,SAUQD,EAAKE,MAAMmC,SAASvF,EAAMmD,KAE1B,mBAAGE,UAAU,sCAEb,mBAAGA,UAAU,qCAIzB,wBACIiB,QAAS,WAEEpB,EAAKC,KAAO3B,GACXD,EAAgB,IAChBE,EAAU,MAEVF,EAAgB,mBAChBE,EAAUyB,EAAKC,MAEhBD,EAAKsC,SAASJ,OAAS,GACtBK,IAAEC,MAAM,CAACC,KAAM,mBAAoBC,QAAQ,kBAX3D,SAiBQ1C,EAAKC,KAAO3B,EAEZ,mBAAG6B,UAAU,0BAEb,mBAAGA,UAAU,0BAIzB,qBAAKA,UAAS,6BAAwBH,EAAKC,KAAO3B,EAASF,EAAe,MAA1E,SAEQ4B,EAAKsC,SAASvC,KAAI,SAAA4C,GAEd,OADA1D,QAAQC,IAAIyD,GAER,sBAAsBxC,UAAU,oBAAhC,UACI,qBAAKK,IAAKmC,EAAOpC,SAASnD,IAAK+C,UAAU,sBACzC,sBAAKA,UAAU,yBAAf,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,QAASE,UAAU,IAAvC,SACI,mBAAG8B,MAAO,CAACC,WAAW,OAAtB,SAA+BF,EAAOpC,SAASG,SAEnD,oBAAIP,UAAU,UAAd,SAAyBwC,EAAOG,YAN9BH,EAAO1C,UAcjC,sBAAKE,UAAU,wBAAf,UAEI,cAAC4C,EAAA,EAAD,CAAkB5C,UAAU,oBACxB6C,aAAW,iBACXC,YAAY,gBACZC,MAAOhF,EACPiF,SAAU,SAACC,GAAD,OAAMjF,EAAWiF,EAAEC,OAAOH,UAExC,cAAC,IAAD,CAAU/C,UAAU,sBAChBiB,QAAS,WA/M7B,IAAC0B,EAAMvD,EAiNqBrB,EAAQgE,OAAS,GAjN5CY,EAmNuC5E,EAnNjCqB,EAmN0CS,EAAKC,IAlNtEvB,MAAM,WAAW,CACbe,OAAO,MACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBtB,OAAQiB,EACRuD,KAAMA,MAGbhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACe,GACH,IAAMC,EAAU9B,EAAK+B,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOJ,EAAOI,IACb,2BAAID,GAAX,IAAiBsC,SAASzC,EAAOyC,WAExBtC,KAGf/B,EAAQ6B,GACR3B,EAAW,OAEZiB,OAAM,SAACC,GACJJ,QAAQC,IAAIG,OA4L4BkD,IAAEC,MAAM,CAACC,KAAM,yBAA0BC,QAAQ,4BA7J9DtC,WCzCxBkD,G,MAlGA,WAAO,IAAD,EAESzF,qBAAWC,GAAvBC,GAFG,EAEVjB,MAFU,EAEHiB,UACRwF,EAAUC,cAHC,EAISlG,mBAAS,IAJlB,mBAIVmG,EAJU,KAIHC,EAJG,OAKepG,mBAAS,IALxB,mBAKVqG,EALU,KAKAC,EALA,KA0CjB,OAEI,qBAAKzD,UAAU,cAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,QAAd,qBACA,uBAAOgD,SAAU,SAACC,GAAD,OAAMM,EAASN,EAAEC,OAAOH,QACrC/C,UAAU,cACVnD,KAAK,QAAQiG,YAAY,qBAE7B,uBAAOE,SAAU,SAACC,GAAD,OAAMQ,EAAYR,EAAEC,OAAOH,QACxC/C,UAAU,cACVnD,KAAK,WAAWiG,YAAY,wBAEhC,wBAAQ7B,QAAS,WAlDjC,yJAAyJyC,KAAKJ,GAIlK/E,MAAM,UAAU,CACZe,OAAQ,OACRd,QAAQ,CACJ,eAAe,oBAEnBe,KAAKC,KAAKC,UAAU,CAChB6D,QACAE,eAGP7E,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACAA,EAAKqB,MACJkD,IAAEC,MAAM,CAACC,KAAMzE,EAAKqB,MAAOqD,QAAQ,iBAGnC9D,aAAakF,QAAQ,MAAO9F,EAAK+F,OAEjCnF,aAAakF,QAAQ,OAAQnE,KAAKC,UAAU5B,EAAKgG,OAEjDjG,EAAS,CAAEf,KAAM,OAAQC,QAASe,EAAKgG,OACvCzB,IAAEC,MAAM,CAACC,KAAM,qBAAsBC,QAAQ,4BAC7Ca,EAAQU,KAAK,SAGpB7E,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MA7BZkD,IAAEC,MAAM,CAACC,KAAM,gBAAiBC,QAAQ,iBAiDWvC,UAAU,+BAA7C,qBACA,qBAAKA,UAAU,iBAAf,SACI,wDAC2B,+BAAM,cAAC,IAAD,CAAMA,UAAU,OAAOG,GAAG,UAA1B,oCAOjD,sBAAKH,UAAU,mBAAf,UACI,sBAAKA,UAAU,mBAAf,UAQI,sBAAKA,UAAU,yBAAf,UACI,+BAAI,+BAAM,mBAAGA,UAAU,wBAAvB,oDACA,8FAEJ,qBAAKK,IAAI,cAAcL,UAAU,QAAQM,IAAI,QAEjD,sBAAKN,UAAU,oBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,kEACA,8CACA,8FAER,qBAAKK,IAAI,mBAAmBL,UAAU,MAAMM,IAAI,kBCkCrDyD,G,OA3HA,WAEb,IAAMX,EAAUC,cAFG,EAGO3F,qBAAWC,GAA9BhB,EAHY,EAGZA,MAAOiB,EAHK,EAGLA,SACRoG,EAAcC,iBAAO,MAJR,EAKQ9G,mBAAS,IALjB,mBAKZ+G,EALY,KAKLC,EALK,OAMkBhH,mBAAS,IAN3B,mBAMZiH,EANY,KAMAC,EANA,KAQnBhG,qBAAU,WACR+D,IAAEkC,MAAMC,KAAKP,EAAYQ,WACzB,IAyBA,OACI,sBAAKxE,UAAU,mBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,cAAC,IAAD,CAASA,UAAU,aAAaG,GAAG,IAAnC,sBACA,sBAAKH,UAAU,0BAAf,UACE,mBAAGyE,cAAY,SAASzE,UAAU,iDAClC,mBAAGiB,QAAS,kBA7BxBxC,aAAaiG,QACb9G,EAAS,CAACf,KAAM,eAChBuG,EAAQU,KAAK,YA2B0B9D,UAAU,kDAGzC,qBAAIZ,GAAG,YAAYY,UAAU,YAA7B,UACE,6BACE,cAAC,IAAD,CAAS2E,OAAK,EAACC,gBAAgB,WAAW5E,UAAU,QAAQG,GAAG,IAA/D,SACE,mBAAGH,UAAU,8BAGjB,6BACE,cAAC,IAAD,CAAS2E,OAAK,EAACC,gBAAgB,WAAW5E,UAAU,QAAQG,GAAG,cAA/D,SACE,mBAAGH,UAAU,oCAGjB,6BACE,cAAC,IAAD,CAAS2E,OAAK,EAACC,gBAAgB,WAAW5E,UAAU,QAAQG,GAAG,mBAA/D,SACE,mBAAGH,UAAU,mCAGjB,6BACE,cAAC,IAAD,CAAS2E,OAAK,EAACC,gBAAgB,WAAW5E,UAAU,QAAQG,GAAG,SAA/D,SACE,mBAAGH,UAAU,0CAGjB,6BACE,cAAC,IAAD,CAASG,GAAG,WAAWwE,OAAK,EAACC,gBAAgB,WAAW5E,UAAU,qBAAlE,SACE,qBAAKA,UAAU,mBAAmBK,IAAK1D,GAASA,EAAMM,gBAM9D,sBAAKmC,GAAG,SAASyF,MAAM,QAAQC,IAAKd,EAAavB,MAAO,CAAC/B,MAAM,SAA/D,UACE,sBAAKV,UAAU,gBAAf,UACE,uBACEnD,KAAK,OACLiG,YAAY,eACZC,MAAOmB,EACPlB,SAAU,SAACC,GAAD,OA9DJ8B,EA8DoB9B,EAAEC,OAAOH,MA7D/CoB,EAAUY,QACVxG,MAAM,gBAAgB,CACpBe,OAAO,OACPd,QAAQ,CACN,eAAe,oBAEjBe,KAAKC,KAAKC,UAAU,CAClBsF,YAGHpG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAqG,GACJX,EAAeW,EAAQnB,SAbR,IAACkB,KAgER,6BAEIX,EAAYxE,KAAI,SAAAC,GACd,OACE,8BAEIA,EAAKC,KAAOnD,EAAMmD,IAElB,KAEA,cAAC,IAAD,CAASK,GAAE,mBAAcN,EAAKC,KAC5BmB,QAAS,WACPmB,IAAEkC,MAAMW,YAAYjB,EAAYQ,SAASU,QACzCf,EAAU,KAHd,SAME,sBAAKnE,UAAU,wBAAf,UACE,qBAAKK,IAAKR,EAAK5C,MACf,+BACG4C,EAAKU,KACN,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACE,+BAAOd,EAAKyD,4BAYlC,qBAAKtD,UAAU,eAAf,SACE,wBAAQA,UAAU,gDAAgDiB,QAAS,kBAAIkD,EAAU,KAAzF,6B,4CCmDCgB,G,MApKGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAKjB,WAAO,IAAD,EAEQ/H,qBAAWC,GAA9BhB,EAFW,EAEXA,MAAOiB,EAFI,EAEJA,SAFI,EAGgBT,mBAAS,IAHzB,mBAGXuI,EAHW,KAGAC,EAHA,OAIsBxI,mBAAS,IAJ/B,mBAIXyI,EAJW,KAIGC,EAJH,OAKoB1I,mBAAS,IAL7B,mBAKX2I,EALW,KAKEC,EALF,OAMoC5I,mBAAS,GAN7C,mBAMX6I,EANW,KAMUC,EANV,KAmBlB5H,oBAAS,sBAAE,sBAAAC,EAAA,sEACDC,MAAM,UAAW,CACfC,QAAQ,CACJ,cAAgB,UAAUC,aAAaC,QAAQ,UAGtDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACHiB,QAAQC,IAAIlB,GACZ8H,EAAa9H,EAAKqI,QAClBtI,EAAS,CACLf,KAAK,SACLC,QAAQ,CACJC,UAAUc,EAAKgG,KAAK9G,UACpBC,UAAUa,EAAKgG,KAAK7G,gBAI/BiC,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAnBb,2CAqBT,IA2DF,OA5BAb,qBAAW,WACJyH,GACCvH,MAAM,iBAAiB,CACnBe,OAAO,MACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBxC,IAAI6I,MAGXnH,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACd,GACAA,EAAKqB,MACJkD,IAAEC,MAAM,CAACC,KAAMzE,EAAKqB,MAAMqD,QAAQ,0BAGlC9D,aAAakF,QAAQ,OAAQnE,KAAKC,UAAL,2BAAmB9C,GAAnB,IAAyBM,IAAIY,EAAKZ,QAC/DW,EAAS,CAACf,KAAK,gBAAiBC,QAAQe,EAAKZ,UAGpDgC,OAAM,SAACC,GACJJ,QAAQC,IAAIG,QAGtB,CAAC4G,IAGC,sBAAK9F,UAAWoF,IAAWE,KAA3B,UAE+B,GAAvBU,GAAmD,KAAvBA,EAE5B,KAEA,cAACG,EAAA,EAAD,CAAgB1F,QAAQ,cAAcsC,MAAOiD,IAEjD,sBAAKhG,UAAU,UAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKK,IAAKuF,IAA8BjJ,EAAQA,EAAMM,IAAM,MAAO+C,UAAU,cAAcM,IAAI,cAEnG,sBAAKN,UAAU,sBAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BrD,EAAOA,EAAM4D,KAAO,YAC/C,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,6BAAKhE,EAAOA,EAAM2G,MAAQ,cAE9B,cAAC9C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,sBAAKX,UAAU,YAAf,UACI,+BAAK0F,EAAWA,EAAU3D,OAAS,UAAnC,YACA,+BAAKpF,EAAOA,EAAMI,UAAUgF,OAAS,UAArC,gBACA,+BAAKpF,EAAOA,EAAMK,UAAU+E,OAAS,UAArC,qBAGR,sBAAK/B,UAAU,mCAAf,UACI,uBAAOoG,OAAO,UAAUvJ,KAAK,OAAOuC,GAAG,eAAgB4D,SAAU,SAACC,GAAD,OArHpE,SAACA,GAClB,IAAMoD,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACa,IAAtBF,EAAOG,YACNX,EAAgBQ,EAAO3G,SAG/B2G,EAAOI,cAAcxD,EAAEC,OAAOwD,MAAM,IA8GwDC,CAAa1D,MACrF,uBAAO2D,QAAQ,eAAf,SACI,qBAAK5G,UAAU,aAAf,SACI,cAAC6G,EAAA,EAAD,QAGR,wBAAQ5F,QAAS,kBA1FnB,WAElB,GAAG2E,EAAc,CAEb,IAAMkB,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQpB,GACxBkB,EAASE,OAAO,gBAAiB,gBACjCF,EAASE,OAAO,aAAc,aAE9B,IAAMC,EAAU,CACZC,iBAAkB,SAACC,GAAmB,IAC3BC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,MACXC,EAAUC,KAAKC,MAAe,IAATJ,EAAeC,GACrCC,EAAU,KACTrB,EAAuBqB,KAKnCG,IAAMC,KAAK,yDAA0DZ,EAAUG,GAC9EtI,MAAK,SAACC,GACHmH,EAAenH,EAAIf,KAAK8J,QAE3B1I,OAAM,SAACC,GACJJ,QAAQC,IAAIG,OAkEuB0I,IAAiB5H,UAAU,aAAlD,qCAKZ,qBAAKA,UAAU,yBAAf,SAEQ0F,EAAU9F,KAAI,SAACC,EAAMI,GACjB,OACKJ,EAAK8B,MAIN,qBAAK3B,UAAW,cAAeK,IAAKR,EAAK8B,MAAsBrB,IAAKT,EAAK+B,OAApB/B,EAAKC,KAF1D,kB,SCoDjB+H,GA5MGzC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAKlB,WAEX,IAAMrC,EAAUC,cAFC,EAGOlG,mBAAS,IAHhB,mBAGVoD,EAHU,KAGJuH,EAHI,OAIS3K,mBAAS,IAJlB,mBAIVmG,EAJU,KAIHC,EAJG,OAKepG,mBAAS,IALxB,mBAKVqG,EALU,KAKAC,EALA,OAMuBtG,mBAAS,IANhC,mBAMVyI,EANU,KAMIC,EANJ,OAOqB1I,wBAAS4K,GAP9B,mBAOVjC,EAPU,KAOGC,EAPH,OAQqC5I,mBAAS,GAR9C,mBAQV6I,EARU,KAQWC,EARX,KAoHjB,OA/BA5H,qBAAW,WACJyH,GACCvH,MAAM,UAAU,CACZe,OAAO,OACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBc,KAAKA,EACL+C,QACAE,WACAvG,IAAI6I,MAGXnH,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACd,GACAA,EAAKqB,MACJkD,IAAEC,MAAM,CAACC,KAAMzE,EAAKqB,MAAMqD,QAAQ,0BAGlCH,IAAEC,MAAM,CAACC,KAAK,4BAA4BC,QAAQ,2BAClDa,EAAQU,KAAK,eAGpB7E,OAAM,SAACC,GACJJ,QAAQC,IAAIG,QAGtB,CAAC4G,IAIC,sBAAK9F,UAAWoF,IAAWE,KAA3B,UACMU,EAAsB,GAExB,cAACG,EAAA,EAAD,CAAgB1F,QAAQ,cAAcsC,MAAOiD,IAE7C,qBAAKhG,UAAU,OAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKK,IAAKuF,EAAa7D,OAAS,EAAI6D,EAAe,yFAA0F5F,UAAU,cAAcM,IAAI,cAE7K,gCACI,uBAAO8F,OAAO,UAAUvJ,KAAK,OAAOuC,GAAG,eAAgB4D,SAAU,SAACC,GAAD,OA1HhF,SAACA,GAClB,IAAMoD,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACa,IAAtBF,EAAOG,YACNX,EAAgBQ,EAAO3G,SAG/B2G,EAAOI,cAAcxD,EAAEC,OAAOwD,MAAM,IAmHoEC,CAAa1D,MACrF,uBAAOjD,UAAU,2BAA2B4G,QAAQ,eAApD,SACI,cAACoB,EAAA,EAAD,CAAYtH,MAAM,UAAUmC,aAAW,iBAAiBlC,UAAU,OAAlE,SACI,cAACkG,EAAA,EAAD,CAAa7G,UAAU,6BAKvC,uBAAOnD,KAAK,OAAOiG,YAAY,iBAC3B9C,UAAU,cACV+C,MAAOxC,EACPyC,SAAU,SAACC,GAAD,OAAM6E,EAAQ7E,EAAEC,OAAOH,UAErC,uBAAOlG,KAAK,OAAOiG,YAAY,2BAC3B9C,UAAU,cACV+C,MAAOO,EACPN,SAAU,SAACC,GAAD,OAAMM,EAASN,EAAEC,OAAOH,UAGtC,uBAAOlG,KAAK,WAAWiG,YAAY,oBAC/B9C,UAAU,cACV+C,MAAOS,EACPR,SAAU,SAACC,GAAD,OAAMQ,EAAYR,EAAEC,OAAOH,UAEzC,wBAAQkF,SAAUjC,EAAsB,IAAK,EAAM/E,QAAS,kBAxIvE,WACb,GAAI,yJAAyJyC,KAAKJ,GAIlK,GAAGsC,EAAc,CAEb,IAAMkB,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQpB,GACxBkB,EAASE,OAAO,gBAAiB,gBACjCF,EAASE,OAAO,aAAc,aAE9B,IAAMC,EAAU,CACZC,iBAAkB,SAACC,GAAmB,IAC3BC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,MACXC,EAAUC,KAAKC,MAAe,IAATJ,EAAeC,GACxCvI,QAAQC,IAAIuI,GACTA,EAAU,KACTrB,EAAuBqB,KAKnCG,IAAMC,KAAK,yDAA0DZ,EAAUG,GAC9EtI,MAAK,SAACC,GACHmH,EAAenH,EAAIf,KAAK8J,QAE3B1I,OAAM,SAACC,GACJJ,QAAQC,IAAIG,UAGf,CACD,IAAI,yJAAyJwE,KAAKJ,GAE9J,YADAlB,IAAEC,MAAM,CAACC,KAAM,gBAAiBC,QAAQ,gBAG5ChE,MAAM,UAAW,CACbe,OAAO,OACPd,QAAS,CACL,eAAe,oBAEnBe,KAAKC,KAAKC,UAAU,CAChBc,KAAKA,EACL+C,QACAE,eAGP7E,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACAA,EAAKqB,MACJkD,IAAEC,MAAM,CAACC,KAAMzE,EAAKqB,MAAOqD,QAAQ,iBAGnCH,IAAEC,MAAM,CAACC,KAAM,+BAAgCC,QAAQ,4BACvDa,EAAQU,KAAK,eAIpB7E,OAAM,SAACC,GACJJ,QAAQC,IAAIG,WAzDhBkD,IAAEC,MAAM,CAACC,KAAM,gBAAiBC,QAAQ,gBAsI8C2F,IAAYlI,UAAU,+BAAxF,qBAGA,qBAAKA,UAAU,iBAAf,SACI,0DAA4B,+BAAM,cAAC,IAAD,CAAMA,UAAU,OAAO2E,OAAK,EAACxE,GAAG,UAAhC,oCAMlD,sBAAKH,UAAU,mBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,4CACA,wHAIA,wBAAQA,UAAU,kBAAkBZ,GAAG,cAAvC,wBAIJ,qBAAKiB,IAAI,cAAcL,UAAU,QAAQM,IAAI,QAEjD,sBAAKN,UAAU,oBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,+BAAI,+BAAM,mBAAGA,UAAU,wBAAvB,oDACA,8FAEL,qBAAKK,IAAI,mBAAmBL,UAAU,MAAMM,IAAI,qBCtC5D6H,G,OA9JG/C,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,YAIQ,WAEf,IAAMnC,EAAUC,cAFK,EAGKlG,mBAAS,IAHd,mBAGdyE,EAHc,KAGPwG,EAHO,OAIGjL,mBAAS,IAJZ,mBAIdoC,EAJc,KAIR8I,EAJQ,OAKKlL,mBAAS,IALd,mBAKdmL,EALc,KAKPC,EALO,OAMiBpL,mBAAS,IAN1B,mBAMd2I,EANc,KAMDC,EANC,OAOiC5I,mBAAS,GAP1C,mBAOd6I,EAPc,KAOOC,EAPP,KAiHtB,OA9BC5H,qBAAW,WACJyH,GACCvH,MAAM,cAAc,CAChBe,OAAO,OACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBmC,QACArC,OACAtC,IAAI6I,MAGXnH,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACd,GACAA,EAAKqB,MACJkD,IAAEC,MAAM,CAACC,KAAMzE,EAAKqB,MAAMqD,QAAQ,0BAGlCH,IAAEC,MAAM,CAACC,KAAK,4BAA4BC,QAAQ,2BAClDa,EAAQU,KAAK,SAGpB7E,OAAM,SAACC,GACJJ,QAAQC,IAAIG,QAGrB,CAAC4G,IAGJ,qCACI,qBAAK9F,UAAWoF,IAAWE,KAA3B,SACMU,EAAsB,GAExB,cAACG,EAAA,EAAD,CAAgB1F,QAAQ,cAAcsC,MAAOiD,MAGjD,qBAAKhG,UAAU,wBAAf,SACK,sBAAKA,UAAU,+BAAf,UACI,sDACA,uBAAOnD,KAAK,OAAOiG,YAAY,qBAC7BC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOmF,EAASnF,EAAEC,OAAOH,UAErC,uBAAOlG,KAAK,OAAOiG,YAAY,gCAC7BC,MAAOxD,EACPyD,SAAU,SAACC,GAAD,OAAOoF,EAAQpF,EAAEC,OAAOH,UAErC,sBAAK/C,UAAU,+BAAf,UACI,qBAAKK,IAAKiI,GAAgB,sFAC1B,sBAAKtI,UAAU,2BAAf,UACG,uBAAOoG,OAAO,UAAUvJ,KAAK,OAAOuC,GAAG,eAAgB4D,SAAU,SAACC,GAAD,OA7H/D,SAACA,GAClB,IAAMoD,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACa,IAAtBF,EAAOG,YACN+B,EAASlC,EAAO3G,SAGxB2G,EAAOI,cAAcxD,EAAEC,OAAOwD,MAAM,IAsHmDC,CAAa1D,MACrF,uBAAO2D,QAAQ,eAAe5G,UAAU,2BAAxC,SACI,sBAAKA,UAAU,iBAAf,UACI,cAAC6G,EAAA,EAAD,IACA,wDAKf,wBAAQ5F,QAAS,kBA5HT,WAChB,GAAGqH,EAAO,CAEN,IAAMxB,EAAW,IAAIC,SAGrBD,EAASE,OAAO,OAAQsB,GAExBxB,EAASE,OAAO,gBAAiB,gBACjCF,EAASE,OAAO,aAAc,aAE9B,IAAMC,EAAU,CACZC,iBAAkB,SAACC,GAAmB,IAC3BC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,MACXC,EAAUC,KAAKC,MAAe,IAATJ,EAAeC,GACrCC,EAAU,KACTrB,EAAuBqB,KAKnCG,IAAMC,KAAK,yDAA0DZ,EAAUG,GAC9EtI,MAAK,SAACC,GACHmH,EAAenH,EAAIf,KAAK8J,KACxB1B,EAAuB,KAAK,WACxBuC,YAAW,WACPvC,EAAuB,KACxB,WAGVhH,OAAM,SAACC,GACJJ,QAAQC,IAAIG,WAKhBX,MAAM,cAAe,CACjBe,OAAQ,OACRd,QAAS,CACL,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBmC,QACArC,WAGPZ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACAA,EAAKqB,MACJkD,IAAEC,MAAM,CAACC,KAAMzE,EAAKqB,MAAOqD,QAAQ,iBAGnCH,IAAEC,MAAM,CAACC,KAAM,4BAA6BC,QAAQ,4BACpDa,EAAQU,KAAK,SAGpB7E,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAkESuJ,IAAezI,UAAU,kBAA9C,mC,QCiBD0I,GAvKGtD,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAKV,WAAO,IAEjBkD,EAAWC,cAAXD,QAFgB,EAGGjL,qBAAWC,GAA9BhB,EAHgB,EAGhBA,MAAOiB,EAHS,EAGTA,SAHS,EAIeT,mBAAS,MAJxB,mBAIhB0L,EAJgB,KAIHC,EAJG,OAKa3L,oBAASR,GAAOA,EAAMK,UAAUkF,SAASyG,IALtD,mBAKhBI,EALgB,KAKJC,EALI,KAOvB3K,oBAAS,sBAAE,sBAAAC,EAAA,uEACA,gBAASqK,GAAW,CACvBnK,QAAQ,CACJ,cAAgB,UAAUC,aAAaC,QAAQ,UAGtDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACHiL,EAAejL,MAElBoB,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAXT,2CAaT,IAEF,IAAM+J,EAAU,uCAAG,sBAAA3K,EAAA,sEACTC,MAAM,UAAW,CACnBe,OAAO,MACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAACyJ,SAASP,MAEjChK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACHD,EAAS,CACLf,KAAK,SACLC,QAAQ,CACJC,UAAUc,EAAKd,UACfC,UAAUa,EAAKb,aAGvByB,aAAakF,QAAQ,OAAQnE,KAAKC,UAAU5B,IAG5CiL,GAAe,SAACK,GACZ,OAAO,2BAEAA,GAFP,IAIItF,KAAK,2BAEEsF,EAAUtF,MAFb,IAIA9G,UAAU,GAAD,mBAAKoM,EAAUtF,KAAK9G,WAApB,CAA+Bc,EAAKiC,aAIzDkJ,GAAc,MAEjB/J,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MArCD,2CAAH,qDAyCVkK,EAAY,uCAAG,sBAAA9K,EAAA,sEACXC,MAAM,YAAa,CACrBe,OAAO,MACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAAC4J,WAAYV,MAEpChK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACHD,EAAS,CACLf,KAAK,SACLC,QAAQ,CACJC,UAAUc,EAAKd,UACfC,UAAUa,EAAKb,aAGvByB,aAAakF,QAAQ,OAAQnE,KAAKC,UAAU5B,IAC5CiL,GAAe,SAACK,GACZ,IAAMG,EAAcH,EAAUtF,KAAK9G,UAIlC0E,QAAO,SAAC5B,GAAD,OAAUA,IAAShC,EAAKiC,OAChC,OAAO,2BACAqJ,GADP,IAEItF,KAAK,2BACCsF,EAAUtF,MADZ,IAED9G,UAAUuM,SAIpBN,GAAc,MAElB/J,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MApCC,2CAAH,qDAwClB,OACI,mCAEQ2J,EAEA,sBAAK7I,UAAU,UAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,cAAcK,IAAKwI,EAAYhF,KAAK5G,QAEvD,sBAAK+C,UAAU,sBAAf,UACI,oBAAIA,UAAU,YAAd,SAA2B6I,EAAYhF,KAAKtD,OAC5C,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQE,UAAU,KAAtC,SACI,6BAAKkI,EAAYhF,KAAKP,UAE1B,cAAC9C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,sBAAKX,UAAU,YAAf,UACI,+BAAK6I,EAAY7J,MAAM+C,OAAvB,YACA,+BAAK8G,EAAYhF,KAAK9G,UAAUgF,OAAhC,gBACA,+BAAK8G,EAAYhF,KAAK7G,UAAU+E,OAAhC,qBAIJgH,EAEA,wBAAQ/I,UAAU,aAAaiB,QAAS,kBAAImI,KAA5C,sBAEA,wBAAQpJ,UAAU,aAAaiB,QAAS,kBAAIgI,KAA5C,0BAKZ,qBAAKjJ,UAAU,yBAAf,SAEQ6I,EAAY7J,MAAMY,KAAI,SAACC,EAAMI,GACzB,OACKJ,EAAK8B,MAIN,qBAAK3B,UAAW,cAAeK,IAAKR,EAAK8B,MAAsBrB,IAAKT,EAAK+B,OAApB/B,EAAKC,KAF1D,aASpB,qBAAKE,UAAWoF,IAAWE,KAA3B,SACI,cAACa,EAAA,EAAD,UCkJLoD,EA1SS,WAAM,MAIMpM,mBAAS,MAJf,mBAInBC,EAJmB,KAITC,EAJS,KAKpBC,EAAc,SAACC,GACnBF,EAAYE,EAAMC,gBAEdC,EAAc,WAClBJ,EAAY,OATY,EAYAK,qBAAWC,GAA9BhB,EAZmB,EAYnBA,MAZmB,KAYZiB,SACUT,mBAAS,KAbP,mBAanBU,EAbmB,KAabC,EAba,OAcIX,mBAAS,IAdb,mBAcnBY,EAdmB,KAcVC,EAdU,OAeab,mBAAS,IAftB,mBAenBc,EAfmB,KAeLC,EAfK,OAgBEf,mBAAS,IAhBX,mBAgBnBgB,EAhBmB,KAgBXC,EAhBW,KAmB1BC,oBAAS,sBACL,sBAAAC,EAAA,sEACUC,MAAM,oBAAqB,CAC7BC,QAAQ,CACJ,cAAgB,UAAYC,aAAaC,QAAQ,UAGxDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACHC,EAAQD,EAAKmB,UAEhBC,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAXpB,2CAaF,IAEF,IAAMC,EAAQ,uCAAG,WAAOC,EAAIC,GAAX,SAAAf,EAAA,sEACPC,MAAM,IAAD,OAAKc,GAAQ,CACpBC,OAAO,MACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBtB,OAAQiB,MAGfT,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACe,GAGH,IAAMC,EAAU9B,EAAK+B,KAAI,SAACC,GAGtB,OAAGA,EAAKC,MAAQJ,EAAOI,IAEZ,2BAAID,GAAX,IAAiBE,MAAML,EAAOK,QAIvBF,KAIf/B,EAAQ6B,MAEXV,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MA/BH,2CAAH,wDAmCRsK,EAAW,uCAAG,WAAO7G,EAAMvD,GAAb,SAAAd,EAAA,sEACVC,MAAM,WAAW,CACnBe,OAAO,MACPd,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUC,aAAaC,QAAQ,QAEnDa,KAAKC,KAAKC,UAAU,CAChBtB,OAAQiB,EACRuD,KAAMA,MAGbhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACe,GACH,IAAMC,EAAU9B,EAAK+B,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOJ,EAAOI,IACb,2BAAID,GAAX,IAAiBsC,SAASzC,EAAOyC,WAExBtC,KAGf/B,EAAQ6B,GACR3B,EAAW,OAEZiB,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAzBA,2CAAH,wDA6BXwC,EAAU,uCAAG,WAAOvD,GAAP,SAAAG,EAAA,sEACTC,MAAM,eAAD,OAAgBJ,GAAU,CACjCmB,OAAQ,SACRd,QAAS,CACLgD,cAAc,UAAU/C,aAAaC,QAAQ,UAGpDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACe,GACH,IAAMC,EAAU9B,EAAK4D,QAAO,SAAC5B,GACzB,OAAOA,EAAKC,MAAQJ,EAAOI,OAE/BhC,EAAQ6B,MAEXV,OAAM,SAACC,GACJJ,QAAQC,IAAIG,MAfD,2CAAH,sDAmBhB,OACI,qBAAKc,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SAEQnC,EAAK+B,KAAI,SAACC,EAAMI,GACZ,OAEI,eAACC,EAAA,EAAD,CAAgBF,UAAU,YAA1B,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKK,IAAKR,EAAKO,SAASnD,IAAK+C,UAAU,oBAAoBM,IAAI,YAC/D,+BACI,cAAC,IAAD,CAAMH,GAEEN,EAAKO,SAASN,MAAQnD,EAAMmD,IAE5B,YAAYD,EAAKO,SAASN,IAE1B,WANR,SASKD,EAAKO,SAASG,OAEnB,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACI,+BACKC,IAAOf,EAAKgB,WAAWC,qBAMpCjB,EAAKO,SAASN,KAAOnD,EAAMmD,KAE3B,gCACI,mBAAGiB,gBAAc,cAAcC,gBAAc,OAAOC,QAAS3D,EAC5D0C,UAAU,4CAEX,cAACkB,EAAA,EAAD,CACC9B,GAAG,cACHhC,SAAUA,EACV+D,aAAW,EACXC,KAAMC,QAAQjE,GACdkE,QAAS7D,EALV,SAOI,cAAC8D,EAAA,EAAD,CAAUN,QAASxD,EAAnB,SACI,mBAAGuC,UAAU,cACZiB,QAAS,WAEES,EAAW7B,EAAKC,kBAU5CD,EAAK8B,MAEL,qCACI,sBAAK3B,UAAU,iBAAf,UACI,6BAAKH,EAAK+B,QACV,cAACpB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,6BAAKd,EAAKN,YAGlB,cAACsC,EAAA,EAAD,UACI,qBAAKxB,IAAKR,EAAK8B,aAIvB,cAACE,EAAA,EAAD,CAAW7B,UAAU,wBAArB,SACA,gCACI,6BAAKH,EAAK+B,QACV,cAACpB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,6BAAKd,EAAKN,cAKtB,eAACuC,EAAA,EAAD,WACI,cAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACI,+BAAKd,EAAKE,MAAMgC,OAASlC,EAAKmC,KAAKD,OAASlC,EAAKoC,MAAMF,OAAvD,eAEJ,sBAAK/B,UAAU,aAAf,UACI,8BACI,wBAAQiB,QAAS,WAERpB,EAAKE,MAAMmC,SAASvF,EAAMmD,KAI3BX,EAASU,EAAKC,IAAK,UAFnBX,EAASU,EAAKC,IAAK,UAJ3B,SAUQD,EAAKE,MAAMmC,SAASvF,EAAMmD,KAE1B,mBAAGE,UAAU,sCAEb,mBAAGA,UAAU,qCAIzB,wBACIiB,QAAS,WAEEpB,EAAKC,KAAO3B,GACXD,EAAgB,IAChBE,EAAU,MAEVF,EAAgB,mBAChBE,EAAUyB,EAAKC,MAEhBD,EAAKsC,SAASJ,OAAS,GACtBK,IAAEC,MAAM,CAACC,KAAM,mBAAoBC,QAAQ,kBAX3D,SAiBQ1C,EAAKC,KAAO3B,EAEZ,mBAAG6B,UAAU,0BAEb,mBAAGA,UAAU,0BAIzB,qBAAKA,UAAS,6BAAwBH,EAAKC,KAAO3B,EAASF,EAAe,MAA1E,SAEQ4B,EAAKsC,SAASvC,KAAI,SAAA4C,GAEd,OADA1D,QAAQC,IAAIyD,GAER,sBAAsBxC,UAAU,oBAAhC,UACI,qBAAKK,IAAKmC,EAAOpC,SAASnD,IAAK+C,UAAU,sBACzC,sBAAKA,UAAU,yBAAf,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,QAASE,UAAU,IAAvC,SACI,mBAAG8B,MAAO,CAACC,WAAW,OAAtB,SAA+BF,EAAOpC,SAASG,SAEnD,oBAAIP,UAAU,UAAd,SAAyBwC,EAAOG,YAN9BH,EAAO1C,UAcjC,sBAAKE,UAAU,wBAAf,UAEI,cAAC4C,EAAA,EAAD,CAAkB5C,UAAU,oBACxB6C,aAAW,iBACXC,YAAY,gBACZC,MAAOhF,EACPiF,SAAU,SAACC,GAAD,OAAMjF,EAAWiF,EAAEC,OAAOH,UAExC,cAAC,IAAD,CAAU/C,UAAU,sBAChBiB,QAAS,WAEDlD,EAAQgE,OAAS,EAEjByH,EAAYzL,EAAS8B,EAAKC,KAE1BsC,IAAEC,MAAM,CAACC,KAAM,yBAA0BC,QAAQ,4BA7J9DtC,WCbxBwJ,G,OAxHGrE,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,YAIG,WAAO,IAAD,EAEQ7H,qBAAWC,GAA9BhB,EAFW,EAEXA,MAFW,KAEJiB,SACaT,mBAAS,KAHlB,mBAGX+G,EAHW,KAGJC,EAHI,OAIQhH,mBAAS,IAJjB,mBAIXuM,EAJW,KAIJC,EAJI,OAKwBxM,mBAAS,IALjC,mBAKXyM,EALW,KAKIC,EALJ,KAOlBxL,qBAAU,WACJE,MAAM,SAAU,CACZC,QAAQ,CACJ,cAAgB,UAAYC,aAAaC,QAAQ,UAGxDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACH8L,EAAS9L,MAEZoB,OAAM,SAACC,GACJJ,QAAQC,IAAIG,QAEnB,IAmBD,OACE,mCAEKwK,EAMD,sBAAK1J,UAAU,kBAAf,UACE,uBACEnD,KAAK,OACLiG,YAAY,eACZC,MAAOmB,EACPlB,SAAU,SAACC,GAAD,OA/BF,SAACA,GAEnB,GADAkB,EAAUlB,GACK,KAAXiB,EAAe,CACjB,IAAM4F,EAAcJ,EAAMjI,QAAO,SAACoC,GAChC,OACEA,EAAKtD,KAAKwJ,cAAc7H,SAASgC,EAAO6F,gBAExClG,EAAKP,MAAMyG,cAAc7H,SAASgC,EAAO6F,kBAG7CF,EAAiBC,QAGjBH,EAASD,GAkBgBM,CAAY/G,EAAEC,OAAOH,UAExC,6BAEc,GAAVmB,EAEAwF,EAAM9J,KAAI,SAAAC,GACR,OACE,8BAEIA,EAAKC,KAAOnD,EAAMmD,IAElB,KAEA,cAAC,IAAD,CAASK,GAAE,mBAAcN,EAAKC,KAA9B,SACE,sBAAKE,UAAU,wBAAf,UACE,qBAAKK,IAAKR,EAAK5C,MACf,+BACG4C,EAAKU,KACN,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACE,+BAAOd,EAAKyD,uBAU5BsG,EAAchK,KAAI,SAAAC,GAChB,OACE,8BAEIA,EAAKC,KAAOnD,EAAMmD,IAElB,KAEA,cAAC,IAAD,CAASK,GAAE,mBAAcN,EAAKC,KAA9B,SACE,sBAAKE,UAAU,wBAAf,UACE,qBAAKK,IAAKR,EAAK5C,MACf,+BACG4C,EAAKU,KACN,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACE,+BAAOd,EAAKyD,4BArDlC,qBAAKtD,UAAWoF,IAAWE,KAA3B,SACI,cAACa,EAAA,EAAD,UC9CDxI,EAAcsM,0BAGrBC,EAAU,WACd,IAAM9G,EAAUC,cADI,EAIM3F,qBAAWC,GAAvBC,GAJM,EAIbjB,MAJa,EAINiB,UAYd,OAVAS,qBAAU,WAER,IAAMwF,EAAOrE,KAAK2K,MAAM1L,aAAaC,QAAQ,SAC1CmF,EAEHjG,EAAS,CAAEf,KAAM,OAAQC,QAAS+G,IAE5BT,EAAQU,KAAK,aACnB,IAGA,qCACE,cAAC,IAAD,CAAOsG,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOzF,OAAK,EAACyF,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOzF,OAAK,EAACyF,KAAK,WAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,UA2BOC,MApBf,WACE,IAAMC,EAAWC,cADJ,EAEaC,qBAAW9N,EVlEV,MUgEd,mBAENC,EAFM,KAECiB,EAFD,KAIb,OACE,qBAAKoC,UAAU,MAAf,SACE,eAACrC,EAAY8M,SAAb,CAAsB1H,MAAO,CAACpG,QAAOiB,YAArC,UAEuB,WAAnB0M,EAASI,UAAwC,WAAnBJ,EAASI,SAEvC,KAEA,cAAC,EAAD,CAAQ1K,UAAU,qBAEpB,cAAC,EAAD,UClEO2K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlM,MAAK,YAAkD,IAA/CmM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b667c409.chunk.js","sourcesContent":["export const intitialState = null;\n\n// we are sending type and payload from signin component\nexport const reducer = (state, action) => {\n     if(action.type == \"USER\") {\n         return action.payload;\n     }\n     if(action.type == \"CLEAR\") {\n         return null;\n     }\n     if(action.type==\"UPDATE\"){\n        return {\n            ...state,\n            followers:action.payload.followers,\n            following:action.payload.following\n        }\n    }\n    if(action.type ==\"UPDATEPROFILE\"){\n        return {\n            ...state,\n            pic:action.payload\n        }\n    }\n     return state;\n};","import React, { useContext, useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { \n    Card, \n    CardContent, \n    CardMedia, \n    Menu, \n    MenuItem, \n    TextareaAutosize, \n    Typography \n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport './style_css/Home.css';\nimport { UserContext } from '../App';\nimport M from 'materialize-css';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n\n    // Mterial ui constants for delete button\n    \n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n\n    const {state, dispatch} = useContext(UserContext);\n    const [data, setData] = useState([]);\n    const [comment, setComment] = useState(\"\");\n    const [showComments, setShowComments] =useState(\"\");\n    const [postId, setPostId] = useState(\"\");\n\n    // getting posts from allpost\n    useEffect(  \n        async() => {\n            await fetch('/allpost', {\n                headers:{\n                    \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\n                }\n            })\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data)\n                setData(data.posts)\n                \n            })\n            .catch((error) => {\n                console.log(error)\n            });\n    },[]);\n\n    const likePost = async (id, like)=>{\n        await fetch(`/${like}` ,{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId: id\n            })\n        })\n        .then((res) => res.json())\n        .then((result) => {\n            // now to add likes at realtime\n            // first get the old data store in the newData run the map on it\n            const newData = data.map((item)=>{\n                // check with which post the liked post matches\n                // then at that post add the updated likes\n                if(item._id === result._id) {\n                    //   to get the old likes and add new likes to them\n                    return {...item, likes:result.likes}\n                }\n                // for other posts which doesn't matches with liked posts\n                else{\n                    return item\n                };\n            });\n            // update the old data with new data\n            setData(newData);\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n    };\n\n    const makeComment = (text, id)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId: id,\n                text: text\n            })\n        })\n        .then((res) => res.json())\n        .then((result) => {\n            const newData = data.map((item) => {\n              if(item._id == result._id){\n                return {...item, comments:result.comments}\n              }else{\n                  return item\n              };\n           });\n          setData(newData);\n          setComment(\"\");\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n    };\n\n    \n    const deletePost = (postId) => {\n        fetch(`/deletepost/${postId}`, {\n            method: \"delete\",\n            headers: {\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then((res) => res.json())\n        .then((result) => {\n            const newData = data.filter((item) => {\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"posts-container\">\n                {\n                    data.map((item, key) => {\n                        return (\n                            \n                            <Card key={key} className=\"post-card\">\n                                <div className=\"post-card-header\">\n                                    <Link to=\n                                        {\n                                            item.postedBy._id !== state._id\n                                            ?\n                                            \"/profile/\"+item.postedBy._id\n                                            :\n                                            \"/profile\" \n                                        }\n                                    >\n                                        <div className=\"user-info\">\n                                            <img src={item.postedBy.pic} className=\"post-user-profile\" alt=\"profile\" />\n                                            <h5>\n                                                    {item.postedBy.name}\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                    <span>\n                                                        {moment(item.createdAt).calendar()}\n                                                    </span>\n                                                </Typography>\n                                            </h5>\n                                        </div>\n                                    </Link>\n                                    {\n                                        item.postedBy._id == state._id \n                                        &&\n                                        <div>\n                                            <i aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} \n                                             className=\"bi bi-three-dots-vertical delete-button\"\n                                            />\n                                            <Menu\n                                             id=\"simple-menu\"\n                                             anchorEl={anchorEl}\n                                             keepMounted\n                                             open={Boolean(anchorEl)}\n                                             onClose={handleClose}\n                                            >\n                                                <MenuItem onClick={handleClose}>\n                                                    <i className=\"bi bi-trash\"\n                                                     onClick={()=>\n                                                            {\n                                                                deletePost(item._id)\n                                                            }\n                                                     }\n                                                    />\n                                                </MenuItem>\n                                            </Menu>\n                                        </div>\n                                    }\n                                </div>\n                                {\n                                    item.photo\n                                    ?\n                                    <>\n                                        <div className=\"post-card-info\">\n                                            <h5>{item.title}</h5>\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                                                <h6>{item.body}</h6>\n                                            </Typography>\n                                        </div>\n                                        <CardMedia>\n                                            <img src={item.photo}/>\n                                        </CardMedia>\n                                    </>\n                                    :\n                                    <CardMedia className=\"post-card-without-img\">\n                                    <div>\n                                        <h5>{item.title}</h5>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                                            <h6>{item.body}</h6>\n                                        </Typography>\n                                    </div>\n                                </CardMedia>\n                                }\n                                <CardContent>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                                        <h6>{item.likes.length + item.haha.length + item.angry.length} reacts</h6>\n                                    </Typography>\n                                    <div className=\"card-icons\">\n                                        <div>\n                                            <button onClick={()=> \n                                                {\n                                                    !item.likes.includes(state._id)\n                                                    ?\n                                                    likePost(item._id, \"likes\")\n                                                    :\n                                                    likePost(item._id, \"unlike\")\n                                                }\n                                            }>\n                                                {\n                                                    item.likes.includes(state._id)\n                                                    ?\n                                                    <i className=\"bi bi-heart-fill icons heart-icon\"/>\n                                                    :\n                                                    <i className=\"bi bi-heart icons heart-icon\"/>\n                                                }\n                                            </button>\n                                        </div>\n                                        <button \n                                            onClick={() =>\n                                                {\n                                                    if(item._id == postId) {\n                                                        setShowComments(\"\")\n                                                        setPostId(\"\")\n                                                    } else {\n                                                        setShowComments(\"increase-height\")\n                                                        setPostId(item._id)\n                                                    }\n                                                    if(item.comments.length < 1){\n                                                        M.toast({html: \"No comments yet!\", classes:\"#f44336 blue\"})\n                                                    }\n                                                }\n                                            }\n                                        >\n                                            {\n                                                item._id == postId\n                                                ?\n                                                <i className=\"bi bi-chat-fill icons\"/>\n                                                :\n                                                <i className=\"bi bi-chat icons\"/>\n                                            }\n                                        </button>\n                                    </div>\n                                    <div className={`comments-container ${item._id == postId ? showComments : null}`}>\n                                        {\n                                            item.comments.map(record=>{\n                                                console.log(record)\n                                                return(\n                                                    <div key={record._id} className=\"comment-container\">\n                                                        <img src={record.postedBy.pic} className=\"post-user-profile\"  />\n                                                        <div className=\"name-comment-container\">\n                                                            <Typography variant=\"body2\"  component=\"p\">\n                                                                <p style={{fontWeight:\"600\"}}>{record.postedBy.name}</p>\n                                                            </Typography>\n                                                            <h6 className=\"comment\">{record.text}</h6>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                    \n                                    <div className=\"add-comment-container\">\n                                        \n                                        <TextareaAutosize className=\"add-comment-input\" \n                                            aria-label=\"empty textarea\"\n                                            placeholder=\"Add a comment\"\n                                            value={comment}\n                                            onChange={(e)=> setComment(e.target.value)}\n                                        />\n                                        <SendIcon className=\"post-comment-button\"\n                                            onClick={()=> \n                                                {\n                                                    comment.length > 0\n                                                    ?\n                                                    makeComment(comment, item._id, )\n                                                    :\n                                                    M.toast({html: \"Comment can't be blank\", classes:\"#f44336 blue\"})\n                                                }\n                                            } \n                                        />\n                                            \n                                    </div>\n                                </CardContent>\n                            </Card>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport M from 'materialize-css';\nimport './style_css/Forms.css';\nimport { UserContext } from '../App';\n\nconst Signin = () => {\n\n    const {state, dispatch} = useContext(UserContext);\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const PostData = () => {\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"Invalid Email\", classes:\"#f44336 red\"});\n            return;\n        }\n        fetch(\"/signin\",{\n            method: \"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                email,\n                password\n            })\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            if(data.error){\n                M.toast({html: data.error, classes:\"#f44336 red\"})\n            }\n            else{\n                localStorage.setItem(\"jwt\", data.token);\n                // data.user is object so we have to stringify\n                localStorage.setItem(\"user\", JSON.stringify(data.user));\n                // dispatching type and the user data to userReducer\n                dispatch({ type: \"USER\", payload: data.user });\n                M.toast({html: 'Signin Successfull', classes:\"#66bb6a green lighten-1\"});\n                history.push('/');\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    };\n\n    return (\n       \n        <div className=\"main-signin\">\n            <div className=\"container\">\n                <div className=\"forms-container\">\n                    <div className=\"signin-signup\">\n                        <div className=\"form\">\n                            <h2 className=\"title\">Sign In</h2>\n                            <input onChange={(e)=> setEmail(e.target.value)}\n                                className=\"input-field\"\n                                type=\"email\" placeholder=\"Enter your email\"\n                            />\n                            <input onChange={(e)=> setPassword(e.target.value)}\n                                className=\"input-field\"\n                                type=\"password\" placeholder=\"Enter your password\"\n                            />\n                            <button onClick={() => PostData()} className=\"btn waves-effect waves-light\">Sign In</button>\n                            <div className=\"link-container\">\n                                <p>\n                                    Don't have an account? <span><Link className=\"link\" to='/signup'> Sign Up</Link></span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"panels-container\">\n                    <div className=\"panel left-panel\">\n                        {/* <div className=\"content\">\n                            <h3>New here ?</h3>\n                            <p>\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,\n                            ex ratione. Aliquid!\n                            </p>\n                        </div> */}\n                        <div className=\"content signin-content\">\n                            <h4><span><i className=\"fas fa-quote-left\"/></span> A good life is a collection of happy Memories</h4>\n                            <h6>\"Now share your memories with the family of Memories app\"</h6>\n                        </div>\n                        <img src=\"img/log.svg\" className=\"image\" alt=\"\" />\n                    </div>\n                    <div className=\"panel right-panel\">\n                        <div className=\"content\">\n                            <h5>Hi! You are most welcome to the </h5>\n                            <h4>MEMORIES App</h4>\n                            <h6>\"Now share your memories with the family of Memories app\"</h6>\n                        </div>\n                    <img src=\"./img/images.png\" className=\"1ge\" alt=\"\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Signin;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { UserContext } from '../App';\nimport './style_css/Navbar.css';\nimport { Typography } from '@material-ui/core';\nimport M from 'materialize-css';\n\nconst Navbar = () => {\n\n  const history = useHistory();\n  const {state, dispatch} = useContext(UserContext);\n  const searchModal = useRef(null)\n  const [search,setSearch] = useState('')\n  const [userDetails,setUserDetails] = useState([])\n\n  useEffect(()=>{\n    M.Modal.init(searchModal.current)\n  },[])\n\n  const logout = () => {\n    localStorage.clear();\n    dispatch({type: \"CLEAR\"});\n    history.push('/signin');\n  };\n\n  const fetchUsers = (query) => {\n    setSearch(query)\n    fetch('/search-users',{\n      method:\"post\",\n      headers:{\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify({\n        query\n      })\n    })\n    .then(res=>res.json())\n    .then(results=>{\n      setUserDetails(results.user)\n    })\n  }\n\n    return (\n        <div className=\"navbar-container\">\n          <div className=\"navbar\">\n            <div className=\"navbar-logo-container\">\n              <NavLink className='links logo' to='/'>Memories</NavLink>\n              <div className=\"search-logout-container\">\n                <i data-target=\"modal1\" className=\"bi bi-search modal-trigger search-logout-btn\"/>\n                <i onClick={()=> logout()} className=\"bi bi-box-arrow-right search-logout-btn\"/>\n              </div>\n            </div>\n            <ul id=\"navbar-ul\" className=\"navbar-ul\">\n              <li>\n                <NavLink exact activeClassName=\"selected\" className=\"links\" to=\"/\">\n                  <i className=\"bi bi-house nav-icons\"/>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact activeClassName=\"selected\" className=\"links\" to=\"/createpost\">\n                  <i className=\"bi bi-plus-circle nav-icons\"/>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact activeClassName=\"selected\" className=\"links\" to=\"/followingsposts\">\n                  <i className=\"bi bi-collection nav-icons\"/>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact activeClassName=\"selected\" className=\"links\" to=\"/users\">\n                  <i className=\"bi bi-person-lines-fill nav-icons\"/>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/profile\" exact activeClassName=\"selected\" className=\"links profile-link\">\n                  <img className='nav-user-profile' src={state && state.pic} />\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n\n          <div id=\"modal1\" class=\"modal\" ref={searchModal} style={{color:\"black\"}}>\n            <div className=\"modal-content\">\n              <input\n                type=\"text\"\n                placeholder=\"Search users\"\n                value={search}\n                onChange={(e)=>fetchUsers(e.target.value)}\n              />\n              <ul>\n                {\n                  userDetails.map(item=>{\n                    return (\n                      <div>\n                        {\n                          item._id == state._id\n                          ?\n                          null\n                          :\n                          <NavLink to={`/profile/${item._id}`} \n                            onClick={()=>{\n                              M.Modal.getInstance(searchModal.current).close()\n                              setSearch('')\n                            }\n                          }>\n                            <div className=\"search-user-container\">\n                              <img src={item.pic} />\n                              <li >\n                                {item.name}\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                  <span>{item.email}</span>\n                                </Typography>\n                              </li>\n                            </div>\n                          </NavLink> \n                        }\n                      </div>\n                    )\n                  })\n                }\n              </ul>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"modal-close waves-effect waves-green btn-flat\" onClick={()=>setSearch('')}>close</button>\n            </div>\n          </div>\n        </div>\n    )\n};\n\nexport default Navbar;","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../App';\nimport { Typography } from '@material-ui/core';\nimport { PhotoCamera } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport M from 'materialize-css';\nimport './style_css/Profile.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n}));\n\nconst Profile = () => {\n    \n    const {state, dispatch} = useContext(UserContext);\n    const [userPosts, setUserPosts] = useState([]);\n    const [profileImage, setProfileImage] = useState(\"\");\n    const [cloudImgUrl, setCloudImgUrl] = useState(\"\");\n    const [imgUploadPercentage, setImgUploadPercentage] = useState(0);\n\n    // to preview the profile image before uploading\n    const imageHandler = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProfileImage(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    };\n\n    useEffect( async () => {\n        await fetch('/mypost', {\n                headers:{\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                }\n            })\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data)\n                setUserPosts(data.mypost);\n                dispatch({\n                    type:\"UPDATE\",\n                    payload:{\n                        followers:data.user.followers,\n                        following:data.user.following\n                    }\n                })\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    },[]);\n\n    const UpdateProfile = () => {\n\n        if(profileImage) {\n            // uploading image to cloudinary\n            const formData = new FormData();\n            formData.append(\"file\", profileImage);\n            formData.append(\"upload_preset\", \"memorise-app\");\n            formData.append(\"cloud_name\", \"usamaar41\");\n            // for progress bar\n            const options = {\n                onUploadProgress: (progressEvent) => {\n                    const {loaded, total} = progressEvent;\n                    let percent = Math.floor(loaded * 100 / total);\n                    if(percent < 100) {\n                        setImgUploadPercentage(percent);\n                    }\n                }\n            }\n            // now adding API Base URL\n            axios.post(\"https://api.cloudinary.com/v1_1/usamaar41/image/upload\", formData, options)\n            .then((res) => {\n                setCloudImgUrl(res.data.url);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n    }\n\n    useEffect( () => {\n        if(cloudImgUrl){\n            fetch('/updateprofile',{\n                method:\"put\",\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body:JSON.stringify({\n                    pic:cloudImgUrl\n                })\n            })\n            .then((res)=>res.json())\n            .then((data)=>{\n                if(data.error){\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\n                }\n                else {\n                    localStorage.setItem(\"user\", JSON.stringify({...state,pic:data.pic}))\n                    dispatch({type:\"UPDATEPROFILE\", payload:data.pic})\n                }\n            })\n            .catch((error)=>{\n                console.log(error)\n            });\n        };\n    },[cloudImgUrl]);\n\n    return (\n        <div className={makeStyles.root}>\n            { \n                imgUploadPercentage == 0 || imgUploadPercentage == 100\n                ? \n                null\n                :\n                <LinearProgress variant=\"determinate\" value={imgUploadPercentage} />\n            }\n            <div className=\"profile\">\n                <div className=\"user-profile-container\">\n                    <div className=\"profile-img-container\">\n                        <img src={profileImage ? profileImage : state ? state.pic : null } className=\"profile-img\" alt=\"profile\"/>\n                    </div>\n                    <div className=\"user-info-container\">\n                        <h2 className=\"user-name\">{state? state.name : \"loading\"}</h2>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                            <h6>{state? state.email : \"loading\"}</h6>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                            <div className=\"user-info\">\n                                <h6>{userPosts? userPosts.length : \"Loading\"} posts</h6>\n                                <h6>{state? state.followers.length : \"loading\"} followers</h6>\n                                <h6>{state? state.following.length : \"loading\"} following</h6>\n                            </div>\n                        </Typography>\n                        <div className=\"profile-img-update-btn-container\">\n                            <input accept=\"image/*\" type=\"file\" id=\"image-upload\"  onChange={(e) => imageHandler(e)}/>\n                            <label htmlFor=\"image-upload\">\n                                <div className=\"upload-btn\">\n                                    <PhotoCamera/>\n                                </div>\n                            </label>\n                            <button onClick={() => UpdateProfile()} className=\"update-btn\">UPDATE PROFILE</button>\n                        </div>\n                    </div>\n                </div>\n            \n                <div className=\"user-gallery-container\">\n                    {\n                        userPosts.map((item, key) => {\n                            return(\n                                !item.photo\n                                ?\n                                null\n                                :\n                                <img className={\"gallery-img\"} src={item.photo} key={item._id} alt={item.title}/>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React, {useEffect, useState, } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { PhotoCamera } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport M from 'materialize-css';\nimport './style_css/Forms.css';\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n}));\n\nconst Signup = () => {\n\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [profileImage, setProfileImage] = useState(\"\");\n    const [cloudImgUrl, setCloudImgUrl] = useState(undefined);\n    const [imgUploadPercentage, setImgUploadPercentage] = useState(0);\n    \n    // to preview the profile image before uploading\n    const imageHandler = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProfileImage(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    };\n\n    const PostData = () => {\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"Invalid Email\", classes:\"#f44336 red\"});\n            return;\n        }\n        if(profileImage) {\n            // uploading image to cloudinary\n            const formData = new FormData();\n            formData.append(\"file\", profileImage);\n            formData.append(\"upload_preset\", \"memorise-app\");\n            formData.append(\"cloud_name\", \"usamaar41\");\n            // for progress bar\n            const options = {\n                onUploadProgress: (progressEvent) => {\n                    const {loaded, total} = progressEvent;\n                    let percent = Math.floor(loaded * 100 / total);\n                    console.log(percent)\n                    if(percent < 100) {\n                        setImgUploadPercentage(percent);\n                    }\n                }\n            }\n            // now adding API Base URL\n            axios.post(\"https://api.cloudinary.com/v1_1/usamaar41/image/upload\", formData, options)\n            .then((res) => {\n                setCloudImgUrl(res.data.url);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n        else {\n            if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n                M.toast({html: \"Invalid Email\", classes:\"#f44336 red\"});\n                return;\n            }\n            fetch(\"/signup\", {\n                method:\"post\",\n                headers: {\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    name:name,\n                    email,\n                    password\n                })\n            })\n            .then((res) => res.json())\n            .then((data) => {\n                if(data.error){\n                    M.toast({html: data.error, classes:\"#f44336 red\"})\n                }\n                else{\n                    M.toast({html: \"Account created successfully\", classes:\"#66bb6a green lighten-1\"});\n                    history.push('/signin');\n                }\n\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        };\n    };\n\n    useEffect( () => {\n        if(cloudImgUrl){\n            fetch(\"/signup\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body:JSON.stringify({\n                    name:name,\n                    email,\n                    password,\n                    pic:cloudImgUrl\n                })\n            })\n            .then((res)=>res.json())\n            .then((data)=>{\n                if(data.error){\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\n                }\n                else{\n                    M.toast({html:\"Post Created Successfully\",classes:\"#43a047 green darken-1\"});\n                    history.push('/signin');\n                }\n            })\n            .catch((error)=>{\n                console.log(error)\n            });\n        };\n    },[cloudImgUrl]);\n\n    return (\n        \n        <div className={makeStyles.root}>\n            { imgUploadPercentage > 0 \n            && \n            <LinearProgress variant=\"determinate\" value={imgUploadPercentage} /> \n            }\n            <div className=\"main\">\n                <div className=\"container sign-up-mode\">\n                    <div className=\"forms-container\">\n                        <div className=\"signin-signup\">\n                            <div className=\"form\">\n                                <div className=\"img-and-upload-btn-container\">\n                                    <div className=\"profile-img-container\">\n                                        <img src={profileImage.length > 0 ? profileImage : \"https://res.cloudinary.com/usamaar41/image/upload/v1616780304/blank-profile_atbknn.png\"} className=\"profile-img\" alt=\"profile\"/>\n                                    </div>\n                                    <div>\n                                        <input accept=\"image/*\" type=\"file\" id=\"image-upload\"  onChange={(e) => imageHandler(e)}/>\n                                        <label className=\"img-upload-btn-container\" htmlFor=\"image-upload\">\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                                <PhotoCamera className=\"img-upload-btn\"/>\n                                            </IconButton>\n                                        </label>\n                                    </div>\n                                </div>\n                                <input type=\"text\" placeholder=\"Your Good Name\"\n                                    className=\"input-field\"\n                                    value={name}\n                                    onChange={(e)=> setName(e.target.value)}\n                                />\n                                <input type=\"text\" placeholder=\"e.g johndoe@provider.com\"\n                                    className=\"input-field\"\n                                    value={email}\n                                    onChange={(e)=> setEmail(e.target.value)}\n                                />\n\n                                <input type=\"password\" placeholder=\"Set your password\"\n                                    className=\"input-field\"\n                                    value={password}\n                                    onChange={(e)=> setPassword(e.target.value)}\n                                />\n                                <button disabled={imgUploadPercentage > 0 && true} onClick={() => PostData()} className=\"btn waves-effect waves-light\">\n                                    Sign Up\n                                </button>\n                                <div className=\"link-container\">\n                                    <p>Already have an account? <span><Link className=\"link\" exact to='/signin'> Sign In</Link></span></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"panels-container\">\n                        <div className=\"panel left-panel\">\n                            <div className=\"content\">\n                                <h3>New here ?</h3>\n                                <p>\n                                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,\n                                ex ratione. Aliquid!\n                                </p>\n                                <button className=\"btn transparent\" id=\"sign-up-btn\">\n                                Sign up\n                                </button>\n                            </div>\n                            <img src=\"img/log.svg\" className=\"image\" alt=\"\" />\n                        </div>\n                        <div className=\"panel right-panel\">\n                            <div className=\"content signup-content\">\n                                <h4><span><i className=\"fas fa-quote-left\"/></span> A good life is a collection of happy Memories</h4>\n                                <h6>\"Now share your memories with the family of Memories app\"</h6>\n                           </div>\n                           <img src=\"./img/images.png\" className=\"1ge\" alt=\"\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React,{ useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { PhotoCamera } from '@material-ui/icons';\nimport M from 'materialize-css';\nimport './style_css/CreatePost.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst CreatePost = () => {\n\n    const history = useHistory();\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [cloudImgUrl, setCloudImgUrl] = useState(\"\");\n    const [imgUploadPercentage, setImgUploadPercentage] = useState(0);\n\n    // to preview the profile image before uploading\n    const imageHandler = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImage(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    };\n    \n    const PostDetails = () => {\n        if(image) {\n            // uploading image to cloudinary\n            const formData = new FormData();\n            // our file is in the image variable\n            // append image to file and file to data\n            formData.append(\"file\", image);\n            // now appending cloudinary to our formData\n            formData.append(\"upload_preset\", \"memorise-app\");\n            formData.append(\"cloud_name\", \"usamaar41\");\n            // for progress bar\n            const options = {\n                onUploadProgress: (progressEvent) => {\n                    const {loaded, total} = progressEvent;\n                    let percent = Math.floor(loaded * 100 / total);\n                    if(percent < 100) {\n                        setImgUploadPercentage(percent);\n                    }\n                }\n            }\n            // now adding API Base URL\n            axios.post(\"https://api.cloudinary.com/v1_1/usamaar41/image/upload\", formData, options)\n            .then((res) => {\n                setCloudImgUrl(res.data.url);\n                setImgUploadPercentage(100, () => {\n                    setTimeout(() => {\n                        setImgUploadPercentage(0)\n                    }, 500);\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n        \n        else {\n            fetch(\"/createpost\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body:JSON.stringify({\n                    title,\n                    body\n                })\n            })\n            .then((res) => res.json())\n            .then((data) => {\n                if(data.error){\n                    M.toast({html: data.error, classes:\"#f44336 red\"})\n                }\n                else{\n                    M.toast({html: \"Post created successfully\", classes:\"#66bb6a green lighten-1\"});\n                    history.push('/');\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        };\n    };\n\n    useEffect( () => {\n        if(cloudImgUrl){\n            fetch(\"/createpost\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body:JSON.stringify({\n                    title,\n                    body,\n                    pic:cloudImgUrl\n                })\n            })\n            .then((res)=>res.json())\n            .then((data)=>{\n                if(data.error){\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\n                }\n                else{\n                    M.toast({html:\"Post Created Successfully\",classes:\"#43a047 green darken-1\"});\n                    history.push('/');\n                }\n            })\n            .catch((error)=>{\n                console.log(error)\n            });\n        };\n     },[cloudImgUrl]);\n\n   return(\n    <>\n        <div className={makeStyles.root}>\n            { imgUploadPercentage > 0 \n            && \n            <LinearProgress variant=\"determinate\" value={imgUploadPercentage} /> \n            }\n        </div>\n        <div className=\"create-post-container\">\n             <div className=\"input-filed create-post-card\">\n                 <h4>What's on your mind?</h4>\n                 <input type=\"text\" placeholder=\"title of your post\"\n                   value={title}\n                   onChange={(e) => setTitle(e.target.value)}\n                 />\n                 <input type=\"text\" placeholder=\"say something about your post\"\n                   value={body}\n                   onChange={(e) => setBody(e.target.value)}\n                 />\n                <div className=\"img-img-upload-btn-container\">\n                    <img src={image ? image : \"https://res.cloudinary.com/usamaar41/image/upload/v1617188233/download_svoifd.png\"} />\n                    <div className=\"choose-img-btn-container\">\n                       <input accept=\"image/*\" type=\"file\" id=\"image-upload\"  onChange={(e) => imageHandler(e)}/>\n                       <label htmlFor=\"image-upload\" className=\"choose-img-btn-container\" >\n                           <div className=\"choose-img-btn\">\n                               <PhotoCamera/>\n                               <p>Choose Photo</p>\n                           </div>\n                       </label>\n                    </div>\n                </div>\n                <button onClick={()=>PostDetails()} className=\"submit-post-btn\">Submit Post</button>\n             </div>\n        </div>\n    </>\n   )       \n};\n\n\nexport default CreatePost;","import React, { useContext, useEffect, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport './style_css/Profile.css';\nimport { UserContext } from '../App';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n// for material ui progressbar\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst UsersProfile = () => {\n    \n    const {user_id} = useParams();\n    const {state, dispatch} = useContext(UserContext);\n    const [userProfile, setUserProfile] = useState(null);\n    const [showfollow, setShowFollow] = useState(state? state.following.includes(user_id):true);\n\n    useEffect( async ()=>{\n        await (`/user/${user_id}`, {\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            setUserProfile(data);\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n    },[]);\n\n    const followUser = async () =>  {\n        await fetch('/follow', {\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({followId:user_id})\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            dispatch({\n                type:\"UPDATE\",\n                payload:{\n                    followers:data.followers,\n                    following:data.following\n                }\n            })\n            localStorage.setItem(\"user\", JSON.stringify(data))\n            // now we need to update the user info in real time\n            // so we are calling a call method which will give us the previous state\n            setUserProfile((prevState) => {\n                return {\n                    // spread the previous state\n                    ...prevState,\n                    // now overwrite the user feiled with updated record\n                    user:{\n                        // spread previous state\n                        ...prevState.user,\n                        // overwrite the follower array\n                        followers:[...prevState.user.followers, data._id]\n                    }\n                };\n            })\n            setShowFollow(true);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    };\n\n    const unfollowUser = async () => {\n        await fetch('/unfollow', {\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({unfollowId: user_id})\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            dispatch({\n                type:\"UPDATE\",\n                payload:{\n                    followers:data.followers,\n                    following:data.following\n                }\n            })\n            localStorage.setItem(\"user\", JSON.stringify(data))\n            setUserProfile((prevState)=>{\n                const newFollower = prevState.user.followers\n                // now filtering the array on the basis of condition\n                // that if the id of the item is not equal to the ids\n                // which we are getting from the backend then remove that item's id\n                .filter((item) => item !== data._id)\n                return {\n                    ...prevState,\n                    user:{\n                       ...prevState.user,\n                       followers:newFollower\n                    }\n                };\n             })\n             setShowFollow(false);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    };\n\n    return (\n        <>\n            {\n                userProfile\n                ?\n                <div className=\"profile\">\n                    <div className=\"user-profile-container\">\n                        <div className=\"profile-img-container\">\n                            <img className=\"profile-img\" src={userProfile.user.pic}/>\n                        </div>\n                        <div className=\"user-info-container\">\n                            <h2 className=\"user-name\">{userProfile.user.name}</h2>\n                            <Typography variant=\"body2\" component=\"h6\">\n                                <h6>{userProfile.user.email}</h6>\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                                <div className=\"user-info\">\n                                    <h6>{userProfile.posts.length} posts</h6>\n                                    <h6>{userProfile.user.followers.length} followers</h6>\n                                    <h6>{userProfile.user.following.length} following</h6>\n                                </div>\n                            </Typography>\n                            {\n                                showfollow\n                                ?\n                                <button className=\"follow-btn\" onClick={()=>unfollowUser()}>Unfollow</button>\n                                :\n                                <button className=\"follow-btn\" onClick={()=>followUser()}>Follow</button>\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"user-gallery-container\">\n                        {\n                            userProfile.posts.map((item, key) => {\n                                return(\n                                    !item.photo\n                                    ?\n                                    null\n                                    :\n                                    <img className={\"gallery-img\"} src={item.photo} key={item._id} alt={item.title}/>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                :\n                <div className={makeStyles.root}>\n                    <LinearProgress />\n                </div>\n            }\n        </>\n    );\n}\n\nexport default UsersProfile;","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { UserContext } from '../App';\nimport { \n    Card, \n    CardContent, \n    CardMedia, \n    Menu, \n    MenuItem, \n    TextareaAutosize, \n    Typography \n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport './style_css/Home.css';\nimport M from 'materialize-css';\n\nconst FollowingsPosts = () => {\n\n    // Mterial ui constants for delete button\n    \n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const {state, dispatch} = useContext(UserContext);\n    const [data, setData] = useState([]);\n    const [comment, setComment] = useState(\"\");\n    const [showComments, setShowComments] =useState(\"\");\n    const [postId, setPostId] = useState(\"\");\n\n    // getting posts from allpost\n    useEffect(  \n        async() => {\n            await fetch('/getfollowingpost', {\n                headers:{\n                    \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\n                }\n            })\n            .then((res) => res.json())\n            .then((data) => {\n                setData(data.posts)\n            })\n            .catch((error) => {\n                console.log(error)\n            });\n    },[]);\n\n    const likePost = async (id, like)=>{\n        await fetch(`/${like}` ,{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId: id\n            })\n        })\n        .then((res) => res.json())\n        .then((result) => {\n            // now to add likes at realtime\n            // first get the old data store in the newData run the map on it\n            const newData = data.map((item)=>{\n                // check with which post the liked post matches\n                // then at that post add the updated likes\n                if(item._id === result._id) {\n                    //   to get the old likes and add new likes to them\n                    return {...item, likes:result.likes}\n                }\n                // for other posts which doesn't matches with liked posts\n                else{\n                    return item\n                };\n            });\n            // update the old data with new data\n            setData(newData);\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n    };\n\n    const makeComment = async (text, id)=>{\n        await fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId: id,\n                text: text\n            })\n        })\n        .then((res) => res.json())\n        .then((result) => {\n            const newData = data.map((item) => {\n              if(item._id == result._id){\n                return {...item, comments:result.comments}\n              }else{\n                  return item\n              };\n           });\n          setData(newData);\n          setComment(\"\");\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n    };\n\n    const deletePost = async (postId) => {\n        await fetch(`/deletepost/${postId}`, {\n            method: \"delete\",\n            headers: {\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then((res) => res.json())\n        .then((result) => {\n            const newData = data.filter((item) => {\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"posts-container\">\n                {\n                    data.map((item, key) => {\n                        return (\n                            \n                            <Card key={key} className=\"post-card\">\n                                <div className=\"post-card-header\">\n                                    <div className=\"user-info\">\n                                        <img src={item.postedBy.pic} className=\"post-user-profile\" alt=\"profile\" />\n                                        <h5>\n                                            <Link to=\n                                                {\n                                                    item.postedBy._id !== state._id\n                                                    ?\n                                                    \"/profile/\"+item.postedBy._id\n                                                    :\n                                                    \"/profile\" \n                                                }\n                                            >\n                                                {item.postedBy.name}\n                                            </Link>\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                <span>\n                                                    {moment(item.createdAt).calendar()}\n                                                </span>\n                                            </Typography>\n                                        </h5>\n                                    </div>\n                                    {\n                                        item.postedBy._id == state._id \n                                        &&\n                                        <div>\n                                            <i aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} \n                                             className=\"bi bi-three-dots-vertical delete-button\"\n                                            />\n                                            <Menu\n                                             id=\"simple-menu\"\n                                             anchorEl={anchorEl}\n                                             keepMounted\n                                             open={Boolean(anchorEl)}\n                                             onClose={handleClose}\n                                            >\n                                                <MenuItem onClick={handleClose}>\n                                                    <i className=\"bi bi-trash\"\n                                                     onClick={()=>\n                                                            {\n                                                                deletePost(item._id)\n                                                            }\n                                                     }\n                                                    />\n                                                </MenuItem>\n                                            </Menu>\n                                        </div>\n                                    }\n                                </div>\n                                {\n                                    item.photo\n                                    ?\n                                    <>\n                                        <div className=\"post-card-info\">\n                                            <h5>{item.title}</h5>\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                                                <h6>{item.body}</h6>\n                                            </Typography>\n                                        </div>\n                                        <CardMedia>\n                                            <img src={item.photo}/>\n                                        </CardMedia>\n                                    </>\n                                    :\n                                    <CardMedia className=\"post-card-without-img\">\n                                    <div>\n                                        <h5>{item.title}</h5>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                                            <h6>{item.body}</h6>\n                                        </Typography>\n                                    </div>\n                                </CardMedia>\n                                }\n                                <CardContent>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                                        <h6>{item.likes.length + item.haha.length + item.angry.length} reacts</h6>\n                                    </Typography>\n                                    <div className=\"card-icons\">\n                                        <div>\n                                            <button onClick={()=> \n                                                {\n                                                    !item.likes.includes(state._id)\n                                                    ?\n                                                    likePost(item._id, \"likes\")\n                                                    :\n                                                    likePost(item._id, \"unlike\")\n                                                }\n                                            }>\n                                                {\n                                                    item.likes.includes(state._id)\n                                                    ?\n                                                    <i className=\"bi bi-heart-fill icons heart-icon\"/>\n                                                    :\n                                                    <i className=\"bi bi-heart icons heart-icon\"/>\n                                                }\n                                            </button>\n                                        </div>\n                                        <button \n                                            onClick={() =>\n                                                {\n                                                    if(item._id == postId) {\n                                                        setShowComments(\"\")\n                                                        setPostId(\"\")\n                                                    } else {\n                                                        setShowComments(\"increase-height\")\n                                                        setPostId(item._id)\n                                                    }\n                                                    if(item.comments.length < 1){\n                                                        M.toast({html: \"No comments yet!\", classes:\"#f44336 blue\"})\n                                                    }\n                                                }\n                                            }\n                                        >\n                                            {\n                                                item._id == postId\n                                                ?\n                                                <i className=\"bi bi-chat-fill icons\"/>\n                                                :\n                                                <i className=\"bi bi-chat icons\"/>\n                                            }\n                                        </button>\n                                    </div>\n                                    <div className={`comments-container ${item._id == postId ? showComments : null}`}>\n                                        {\n                                            item.comments.map(record=>{\n                                                console.log(record)\n                                                return(\n                                                    <div key={record._id} className=\"comment-container\">\n                                                        <img src={record.postedBy.pic} className=\"post-user-profile\"  />\n                                                        <div className=\"name-comment-container\">\n                                                            <Typography variant=\"body2\"  component=\"p\">\n                                                                <p style={{fontWeight:\"600\"}}>{record.postedBy.name}</p>\n                                                            </Typography>\n                                                            <h6 className=\"comment\">{record.text}</h6>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                    \n                                    <div className=\"add-comment-container\">\n                                        \n                                        <TextareaAutosize className=\"add-comment-input\" \n                                            aria-label=\"empty textarea\"\n                                            placeholder=\"Add a comment\"\n                                            value={comment}\n                                            onChange={(e)=> setComment(e.target.value)}\n                                        />\n                                        <SendIcon className=\"post-comment-button\"\n                                            onClick={()=> \n                                                {\n                                                    comment.length > 0\n                                                    ?\n                                                    makeComment(comment, item._id, )\n                                                    :\n                                                    M.toast({html: \"Comment can't be blank\", classes:\"#f44336 blue\"})\n                                                }\n                                            } \n                                        />\n                                            \n                                    </div>\n                                </CardContent>\n                            </Card>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default FollowingsPosts;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { UserContext } from '../App';\nimport './style_css/Users.css';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n// for material ui progressbar\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst Users = () => {\n\n  const {state, dispatch} = useContext(UserContext);\n  const [search,setSearch] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  useEffect(() => {\n        fetch('/users', {\n            headers:{\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            setUsers(data)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n  }, [])\n\n  const searchUsers = (e) => {\n    setSearch(e);\n    if (search !== \"\") {\n      const newUserList = users.filter((user) => {\n        return (\n          user.name.toLowerCase().includes(search.toLowerCase())\n          ||\n          user.email.toLowerCase().includes(search.toLowerCase())\n        )\n      });\n      setFilteredUsers(newUserList);\n    }\n    else {\n      setUsers(users);\n    };\n  };\n\n    return (\n      <>\n        {\n          !users\n          ?\n          <div className={makeStyles.root}>\n              <LinearProgress />\n          </div>\n          :\n          <div className=\"users-container\">\n            <input \n              type=\"text\"\n              placeholder=\"Search users\"\n              value={search}\n              onChange={(e) => searchUsers(e.target.value)}\n            /> \n            <ul>\n              {\n                search == 0 \n                ?\n                users.map(item=>{\n                  return (\n                    <div>\n                      {\n                        item._id == state._id\n                        ?\n                        null\n                        :\n                        <NavLink to={`/profile/${item._id}`}>\n                          <div className=\"search-user-container\">\n                            <img src={item.pic} />\n                            <li >\n                              {item.name}\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                <span>{item.email}</span>\n                              </Typography>\n                            </li>\n                          </div>\n                        </NavLink> \n                      }\n                    </div>\n                  )\n                })\n                :\n                filteredUsers.map(item=>{\n                  return (\n                    <div>\n                      {\n                        item._id == state._id\n                        ?\n                        null\n                        :\n                        <NavLink to={`/profile/${item._id}`}>\n                          <div className=\"search-user-container\">\n                            <img src={item.pic} />\n                            <li >\n                              {item.name}\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                <span>{item.email}</span>\n                              </Typography>\n                            </li>\n                          </div>\n                        </NavLink> \n                      }\n                    </div>\n                  )\n                })\n              }\n            </ul>\n          </div>\n        }\n      </>\n    )\n};\n\nexport default Users;","import React, { createContext, useState, useEffect, useReducer, useContext } from 'react';\nimport { Route, useHistory, useLocation } from 'react-router-dom';\nimport { intitialState, reducer } from './reducer/userReducer';\nimport './App.css';\nimport Home from './core/Home';\nimport Signin from './auth/Signin';\nimport Navbar from './core/Navbar';\nimport Profile from './core/Profile';\nimport Signup from './auth/Signup';\nimport CreatePost from './core/CreatePost';\nimport UsersProfile from './core/UsersProfile';\nimport FollowingsPosts from './core/FollowingsPosts';\nimport Users from './core/Users';\n\nexport const UserContext = createContext();\n\n// Routing component contains all the routers\nconst Routing = () => {\n  const history = useHistory();\n  // if the user is not logged out and close the app\n  // in this case our state is going to destroy\n  const {state, dispatch} = useContext(UserContext);\n\n  useEffect(() => {\n    // we need to convert the user to object by using parse\n    const user = JSON.parse(localStorage.getItem(\"user\"));   \n    if(user) {\n    // now updating user state\n    dispatch({ type: \"USER\", payload: user })\n  }\n    else{ history.push('/signin')}\n  },[]);\n\n  return(\n    <>\n      <Route path='/signin'>\n        <Signin/>\n      </Route>\n      <Route path='/signup'>\n        <Signup/>\n      </Route>\n      <Route exact path='/'>\n        <Home/>\n      </Route>\n      <Route exact path='/profile'>\n        <Profile/>\n      </Route>\n      <Route path='/createpost'>\n        <CreatePost/>\n      </Route>\n      <Route path='/followingsposts'>\n        <FollowingsPosts />\n      </Route>\n      <Route path='/profile/:user_id'>\n        <UsersProfile/>\n      </Route>\n      <Route path='/users'>\n        <Users />\n      </Route>\n    </>\n  )\n};\n\n// Main functional component\nfunction App() {\n  const location = useLocation();\n  const [state, dispatch] = useReducer(reducer, intitialState);\n  \n  return (\n    <div className=\"App\">\n      <UserContext.Provider value={{state, dispatch}}>\n        {\n          location.pathname=='/signup'||location.pathname=='/signin'\n          ?\n          null\n          :\n          <Navbar className=\"navbar-container\"/>\n        }\n        <Routing/>\n      </UserContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}